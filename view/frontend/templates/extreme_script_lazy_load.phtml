<?php
/**
 * Copyright (c) 2022. All rights reserved.
 * @author: Volodymyr Hryvinskyi <mailto:volodymyr@hryvinskyi.com>
 */

declare(strict_types=1);

/**
 * @var $block \Magento\Framework\View\Element\Template
 * @var $configViewModel \Hryvinskyi\PageSpeedJsExtremeLazyLoadFrontendUi\ViewModel\ConfigViewModel
 */

$configViewModel = $block->getData('configViewModel');
?>
<script data-ignore-extreme-lazy-load data-pagespeed-ignore-merge>
    window.addEventListener('load', function () {
        const scripts = document.querySelectorAll('script[type=lazyload]');
        let extremeLazyLoadIterator = 0;

        <?php if ($configViewModel->getConfig()->isTimeOutEnabled() === true) : ?>
        let timeOut;
        document.addEventListener('DOMContentLoaded', () => {
            timeOut = setTimeout(initScripts, <?= $configViewModel->getConfig()->getTimeOut() ?>);
        });
        <?php endif; ?>
        <?php foreach ($configViewModel->getConfig()->getDelayEvents() as $delayEvent): ?>
        document.addEventListener('<?php echo $delayEvent ?>', initScriptsOnEvent);
        <?php endforeach; ?>

        function initScriptsOnEvent(event) {
            event.currentTarget.removeEventListener(event.type, initScriptsOnEvent);
            <?php if ($configViewModel->getConfig()->isTimeOutEnabled() === true) : ?>
            clearTimeout(timeOut);
            <?php endif; ?>
            initScripts();
        }

        function initScripts() {
            if (scripts.length === 0 || scripts.length < extremeLazyLoadIterator + 1) {
                return;
            }
            script = scripts[extremeLazyLoadIterator];
            if (script.getAttribute('data-lazy-source') !== null) {
                loadExternalJs(script);
            } else {
                loadInlineJs(script);
            }

            if (scripts.length === extremeLazyLoadIterator) {
                let evt = document.createEvent('Event');
                evt.initEvent('load', false, false);
                window.dispatchEvent(evt);
            }
        }

        function iterateLoadScript()
        {
            extremeLazyLoadIterator++;
            initScripts();
        }

        function loadExternalJs(oldScript) {
            const script = document.createElement('script');
            script.type = 'text/javascript';
            script.src = oldScript.getAttribute('data-lazy-source');
            // script.async = true;
            script.onload = iterateLoadScript;
            script.onerror = iterateLoadScript;
            if (typeof(oldScript.attributes) !== "undefined") {
                for (var attr, i = 0, attrs = script.attributes, n = attrs.length; i < n; i++) {
                    attr = attrs[i];
                    if (attr.nodeName !== 'data-lazy-source' && attr.nodeName !== 'type') {
                        script.setAttribute(attr.nodeName, attr.nodeValue);
                    }
                }
            }
            document.head.appendChild(script);
        }

        function loadInlineJs(element) {
            const script = document.createElement('script');
            script.type = 'text/javascript';
            script.innerHTML = element.innerHTML;
            element.before(script);
            element.remove();
            iterateLoadScript();
        }
    });
</script>
